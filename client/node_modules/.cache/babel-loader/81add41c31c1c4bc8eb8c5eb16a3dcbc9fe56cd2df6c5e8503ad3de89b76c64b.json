{"ast":null,"code":"var _jsxFileName = \"D:\\\\Coding Projects\\\\task-manager-react\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Header from \"./components/Header\";\nimport TaskList from \"./components/TaskList\";\nimport AddTask from \"./components/AddTask\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [tasks, setTasks] = useState([\n    // {\n    //   id: \"1\",\n    //   taskName: \"jkvbhjbhjbhjbjbjh\",\n    //   deadline: \"dc\",\n    //   status: \"safc\",\n    // },\n  ]);\n  const handleAddTask = newTask => {\n    const newEntry = {\n      id: tasks.length + 1,\n      taskName: newTask.taskName,\n      deadline: newTask.deadline,\n      status: false\n    };\n    setTasks(prevTasks => [...prevTasks, newEntry]);\n  };\n  const toggleTaskCompletion = id => {\n    const updatedTasks = tasks.map(task => id === task.id ? {\n      ...task,\n      status: !task.status\n    } : task);\n    setTasks(updatedTasks);\n    console.log(tasks);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), tasks.length ? /*#__PURE__*/_jsxDEV(TaskList, {\n      tasks: tasks,\n      onToggle: toggleTaskCompletion\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"center\",\n      children: \"Add Tasks!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(AddTask, {\n      onAdd: handleAddTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"uO5xe5Lpy/TXK0gq7Z6qGefP6DI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Header","TaskList","AddTask","jsxDEV","_jsxDEV","App","_s","tasks","setTasks","handleAddTask","newTask","newEntry","id","length","taskName","deadline","status","prevTasks","toggleTaskCompletion","updatedTasks","map","task","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","onToggle","className","onAdd","_c","$RefreshReg$"],"sources":["D:/Coding Projects/task-manager-react/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Header from \"./components/Header\";\nimport TaskList from \"./components/TaskList\";\nimport AddTask from \"./components/AddTask\";\nimport \"./App.css\";\nconst App = () => {\n  const [tasks, setTasks] = useState([\n    // {\n    //   id: \"1\",\n    //   taskName: \"jkvbhjbhjbhjbjbjh\",\n    //   deadline: \"dc\",\n    //   status: \"safc\",\n    // },\n  ]);\n\n  const handleAddTask = (newTask) => {\n    const newEntry = {\n      id: tasks.length + 1,\n      taskName: newTask.taskName,\n      deadline: newTask.deadline,\n      status: false,\n    };\n\n    setTasks((prevTasks) => [...prevTasks, newEntry]);\n  };\n\n  const toggleTaskCompletion = (id) => {\n    const updatedTasks = tasks.map((task) =>\n      id === task.id ? { ...task, status: !task.status } : task\n    );\n    setTasks(updatedTasks);\n    console.log(tasks);\n  };\n\n  return (\n    <div>\n      <Header />\n      {tasks.length ? (\n        <TaskList tasks={tasks} onToggle={toggleTaskCompletion} />\n      ) : (\n        <h2 className=\"center\">Add Tasks!</h2>\n      )}\n      <AddTask onAdd={handleAddTask} />\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACnB,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC;IACjC;IACA;IACA;IACA;IACA;IACA;EAAA,CACD,CAAC;EAEF,MAAMU,aAAa,GAAIC,OAAO,IAAK;IACjC,MAAMC,QAAQ,GAAG;MACfC,EAAE,EAAEL,KAAK,CAACM,MAAM,GAAG,CAAC;MACpBC,QAAQ,EAAEJ,OAAO,CAACI,QAAQ;MAC1BC,QAAQ,EAAEL,OAAO,CAACK,QAAQ;MAC1BC,MAAM,EAAE;IACV,CAAC;IAEDR,QAAQ,CAAES,SAAS,IAAK,CAAC,GAAGA,SAAS,EAAEN,QAAQ,CAAC,CAAC;EACnD,CAAC;EAED,MAAMO,oBAAoB,GAAIN,EAAE,IAAK;IACnC,MAAMO,YAAY,GAAGZ,KAAK,CAACa,GAAG,CAAEC,IAAI,IAClCT,EAAE,KAAKS,IAAI,CAACT,EAAE,GAAG;MAAE,GAAGS,IAAI;MAAEL,MAAM,EAAE,CAACK,IAAI,CAACL;IAAO,CAAC,GAAGK,IACvD,CAAC;IACDb,QAAQ,CAACW,YAAY,CAAC;IACtBG,OAAO,CAACC,GAAG,CAAChB,KAAK,CAAC;EACpB,CAAC;EAED,oBACEH,OAAA;IAAAoB,QAAA,gBACEpB,OAAA,CAACJ,MAAM;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACTrB,KAAK,CAACM,MAAM,gBACXT,OAAA,CAACH,QAAQ;MAACM,KAAK,EAAEA,KAAM;MAACsB,QAAQ,EAAEX;IAAqB;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAE1DxB,OAAA;MAAI0B,SAAS,EAAC,QAAQ;MAAAN,QAAA,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CACtC,eACDxB,OAAA,CAACF,OAAO;MAAC6B,KAAK,EAAEtB;IAAc;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9B,CAAC;AAEV,CAAC;AAACtB,EAAA,CAxCID,GAAG;AAAA2B,EAAA,GAAH3B,GAAG;AA0CT,eAAeA,GAAG;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}